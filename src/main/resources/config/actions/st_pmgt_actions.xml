<?xml version="1.0" encoding="UTF-8"?>
<listofactions>
    <actionsgroup name="st-pmgt-indicator" class="" resourceBundle="ext.st.pmgt.indicator.resources.indicatorActionsRB">
        <action name="planActivityINIndicator">
            <component name="ext.st.pmgt.indicator.builders.PlanActivityINIndicatorTableBuilder" windowType="page"/>
        </action>
        <action name="planActivityOTIndicator">
            <component name="ext.st.pmgt.indicator.builders.PlanActivityOTIndicatorTableBuilder" windowType="page"/>
        </action>

        <action name="importIndicator">
            <component name="ext.st.pmgt.indicator.builders.ImportIndicatorWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.ImportIndicatorProcessor"/>
        </action>

        <action name="indicatorReport">
            <component name="ext.st.pmgt.indicator.builders.IndicatorReportWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.IndicatorReportProcessor"/>
        </action>
        <action name="addRating">
            <component name="ext.st.pmgt.indicator.builders.AddRatingWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.AddRatingProcessor"/>
        </action>
        <action name="indicatorRating">
            <component name="ext.st.pmgt.indicator.builders.IndicatorRatingTabBuilder" windowType="popup"/>
        </action>
        <action name="latestRating">
            <component name="ext.st.pmgt.indicator.builders.LatestIndicatorRatingTableBuilder" windowType="popup"/>
        </action>
        <action name="allRating">
            <component name="ext.st.pmgt.indicator.builders.AllIndicatorRatingTableBuilder" windowType="popup"/>
        </action>

        <action name="pickDeviationValueAndDifficultyValue">
            <component name="ext.st.pmgt.indicator.builders.DeviationValueAndDifficultyValueWizardBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.CreateOTIndicatorProcessor"/>
        </action>

    </actionsgroup>

    <actionsgroup name="st-pmgt-act" class="" resourceBundle="ext.st.pmgt.indicator.resources.indicatorActionsRB">
        <action name="reportExpectedFinishTime" selectRequired="true">
            <component name="ext.st.pmgt.indicator.builders.ReportPlanActivitySTExpectedFinishTimeWizardBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.ReportPlanActivitySTExpectedFinishTimeProcessor"/>
        </action>
        <action name="createDeliverable">
            <component name="ext.st.pmgt.indicator.builders.CreateDeliverableWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.CreateDeliverableProcessor"/>
        </action>
        <action name="documentPicker">
            <component name="ext.st.pmgt.indicator.builders.PIDocumentPickerWizardBuilder" windowType="popup"/>
            <command className="com.pisx.tundra.pmgt.project.processors.ObjectPickerCallBackProcessor"/>
        </action>
    </actionsgroup>

    <actionsgroup name="st-pmgt-ot" class="" resourceBundle="ext.st.pmgt.indicator.resources.indicatorActionsRB">
        <action name="addOT" beforeJS="buttonEvent">
            <command className="ext.st.pmgt.indicator.processors.ImportOTIndicatorProcessor"/>
        </action>
        <action name="saveOT" beforeJS="buttonEvent">
            <command className="ext.st.pmgt.indicator.processors.SaveOTIndicatorProcessor"/>
        </action>
        <action name="listDeliverablesForOT" beforeJS="buttonEvent">
            <component name="ext.st.pmgt.indicator.builders.PlanDeliverablesForOTTableBuilder" windowType="page"/>
        </action>
        <!--        新增ot-->
        <action name="createOTIndicator">
            <component name="ext.st.pmgt.indicator.builders.CreateOTIndicatorWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.FlushOTPageProcessor"/>
        </action>
        <action name="deleteOTIndicator" beforeJS="buttonEvent">
            <command className="ext.st.pmgt.indicator.processors.DeleteOTIndicatorProcessor"/>
        </action>
    </actionsgroup>
    <actionsgroup name="st-report" class="" resourceBundle="ext.st.pmgt.indicator.resources.indicatorActionsRB">
        <action name="pertReport" beforeJS="buttonEvent">
            <command className="ext.st.pmgt.indicator.processors.PERTReportProcessor"/>
        </action>
        <action name="projectRiskReport" beforeJS="buttonEvent" selectRequired="true">
            <command className="ext.st.pmgt.indicator.processors.ProjectRiskReportProcessor"/>
        </action>
        <action name="departmentRiskReport" selectRequired="true">
            <component name="ext.st.pmgt.indicator.builders.TimeRangeWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.DepartmentRiskReportProcessor"/>
        </action>
    </actionsgroup>

    <actionsgroup name="st-pmgt-in" class="" resourceBundle="ext.st.pmgt.indicator.resources.indicatorActionsRB">
        <action name="creatINIndicator">
            <component name="ext.st.pmgt.indicator.builders.CreateINIndicatorWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.indicator.processors.CreateINIndicatorProcessor"/>
        </action>

    </actionsgroup>

    <!--问题-->
    <actionsgroup name="pi-pmgt-project-copy" class="" resourceBundle="ext.st.pmgt.issue.resources.issueActionsRB">
        <action name="listProjectIssuesForProjectCopy">
            <component name="ext.st.pmgt.issue.builders.ProjectRelatedIssuesTableBuilder" windowType="page"/>
        </action>
        <!-- 创建问题-->
        <action name="createProjectIssueCopy">
            <component name="ext.st.pmgt.issue.builders.CreateOREditProjectIssueWizardBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.CreateProjectIssueProcessor"/>
        </action>


        <!-- 编辑问题 -->
        <action name="editProjectIssue">
            <component name="ext.st.pmgt.issue.builders.CreateOREditProjectIssueWizardBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.EditProjectIssueProcessor"/>
        </action>
        <!-- 删除问题 -->
        <action name="deleteProjectIssue" beforeJS="buttonEvent">
            <command className="ext.st.pmgt.issue.processors.DeleteProjectIssuesProcessor"/>
        </action>


        <!-- 责任部门展示-->
        <action name="departmentListPicker">
            <component name="ext.st.pmgt.issue.builders.ProjectDutyDepartmentTableBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.ProjectDutyDepartmentProcessor"/>
        </action>


        <!-- 涉及部门列表展示-->
        <action name="involveGroupList">
            <component name="ext.st.pmgt.issue.builders.ProjectInvolvedDepartmentTableBuilder"
                       windowType="popup"/>
        </action>

        <!-- 添加涉及部门-->
        <action name="addInvolveDepartments">
            <component name="ext.st.pmgt.issue.builders.AddInvolveDepartmentsWizardBuilder"
                       windowType="popup"/>

            <command className="ext.st.pmgt.issue.processors.AddInvolveDepartmentsProcessor"/>
        </action>
        <!-- 删除涉及部门-->
        <action name="deleteInvolveDepartments" beforeJS="buttonEvent" selectRequired="true">
            <command className="ext.st.pmgt.issue.processors.DeleteInvolveDepartmentsProcessor"/>
        </action>

    </actionsgroup>


    <!--风险-->
    <actionsgroup name="pi-pmgt-risk-copy" class="" resourceBundle="ext.st.pmgt.issue.resources.issueActionsRB">
        <action name="listProjectRisksForProjectCopy">
            <component name="ext.st.pmgt.issue.builders.ProjectRisksForProjectTableBuilder"/>
        </action>
        <!--创建风险-->
        <action name="risk_CreateCopy">
            <component name="ext.st.pmgt.issue.builders.CreateOREditProjectRiskWizardBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.CreateProjectRiskProcessor"/>
        </action>


        <!--问题相关风险列表-->
        <action name="projectRisk">
            <component name="ext.st.pmgt.issue.builders.ProjectRiskListTableBuilder"
                       windowType="page"/>
            <!--            <command className="ext.st.pmgt.issue.processors.CreateProjectRiskProcessor"/>-->
        </action>

        <!-- 提出部门列表展示-->
        <action name="proposingDepartmentListPicker">
            <component name="ext.st.pmgt.issue.builders.ProjectRiskProposingGroupTableBulider"
                       windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.ProjectRiskProposingGroupProcessor"/>
        </action>

        <action name="affectedDepartmentListPicker">
            <component name="ext.st.pmgt.issue.builders.ProjectRiskAffectedGroupTableBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.ProjectRiskAffectedGroupProcessor"/>
        </action>


        <action name="affectedGroupList">
            <component name="ext.st.pmgt.issue.builders.ProjectRiskAffectedDepartmentTableBuilder"
                       windowType="popup"/>
        </action>

        <action name="preRisk">
            <component name="ext.st.pmgt.issue.builders.ProjectRiskPreRiskTableBuilder"
                       windowType="popup"/>
        </action>

        <action name="addAffectedDepartments">
            <component name="ext.st.pmgt.issue.builders.AddAffectedDepartmentsWizardBuilder"
                       windowType="popup"/>

            <command className="ext.st.pmgt.issue.processors.AddAffectedDepartmentsProcessor"/>
        </action>


        <action name="deleteAffectedDepartments" beforeJS="buttonEvent" selectRequired="true">
            <command className="ext.st.pmgt.issue.processors.DeleteAffectedDepartmentsProcessor"/>
        </action>


        <action name="addInvolveRisk">
            <component name="ext.st.pmgt.issue.builders.AddInvolveRiskWizardBuilder"
                       windowType="popup"/>

            <command className="ext.st.pmgt.issue.processors.AddInvolveRiskProcessor"/>
        </action>

        <action name="deleteInvolveRisk" beforeJS="buttonEvent" selectRequired="true">
            <command className="ext.st.pmgt.issue.processors.DeleteInvolveRiskProcessor"/>
        </action>


        <action name="addPreRisk">
            <component name="ext.st.pmgt.issue.builders.AddPreRiskWizardBuilder"
                       windowType="popup"/>

            <command className="ext.st.pmgt.issue.processors.AddPreRiskProcessor"/>
        </action>

        <action name="deletePreRisk" beforeJS="buttonEvent" selectRequired="true">
            <command className="ext.st.pmgt.issue.processors.DeletePreRiskProcessor"/>
        </action>


        <action name="risk_EditCopy">
            <component name="ext.st.pmgt.issue.builders.CreateOREditProjectRiskWizardBuilder"
                       windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.EditProjectRiskProcessorCopy"/>
        </action>

        <action name="deleteProjectRiskCopy" beforeJS="buttonEvent">
            <command className="ext.st.pmgt.issue.processors.DeleteProjectRiskProcessorCopy"/>
            <!--<includeFilter name="pmgtGeneralAccessFilter" functionCode="112"/>-->
        </action>
    </actionsgroup>


<!--    <actionsgroup name="st-pmgt-risk" resourceBundle="ext.st.pmgt.issue.resources.issueActionsRB">-->
<!--        <action name="riskInformation">-->
<!--            <component name="ext.st.pmgt.issue.builders.ProjectRisksInformationTableBuilder"/>-->
<!--        </action>-->
<!--    </actionsgroup>-->


    <actionsgroup name="st-pmgt-measures" resourceBundle="ext.st.pmgt.issue.resources.issueActionsRB">
        <action name="measuresDesign">
            <component name="ext.st.pmgt.issue.builders.ProjectMeasuresTableBuilder"/>
        </action>

        <action name="addRiskMeasures">
            <component name="ext.st.pmgt.issue.builders.CreateOREditProjectMeasuresWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.CreateProjectMeasuresProcessor"/>
        </action>


        <action name="deleteRiskMeasures" beforeJS="buttonEvent" selectRequired="true">
            <command className="ext.st.pmgt.issue.processors.DeleteRiskMeasuresProcessor"/>
        </action>


        <action name="measure_Edit">
            <component name="ext.st.pmgt.issue.builders.CreateOREditProjectMeasuresWizardBuilder" windowType="popup"/>
            <command className="ext.st.pmgt.issue.processors.EditProjectMeasuresProcessor"/>
        </action>

        <action name="details">
            <component name="ext.st.pmgt.issue.builders.STProjectMeasuresAttributesPanelBuilder"
                       windowType="page"/>
        </action>
    </actionsgroup>

</listofactions>
